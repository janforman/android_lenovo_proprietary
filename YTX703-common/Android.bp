/**
 * Copyright (C) 2019-2020 The LineageOS Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * This file is generated by device/lenovo/YTX703-common/setup-makefiles.sh
 */

soong_namespace {
}

cc_prebuilt_library_shared {
	name: "vendor.display.color@1.0",
	owner: "lenovo",
	strip: {
		none: true,
	},
	target: {
		android_arm: {
			srcs: ["proprietary/lib/vendor.display.color@1.0.so"],
		},
		android_arm64: {
			srcs: ["proprietary/lib64/vendor.display.color@1.0.so"],
		},
	},
	compile_multilib: "both",
	check_elf_files: false,
	prefer: true,
}

cc_prebuilt_library_shared {
	name: "libbtnv",
	owner: "lenovo",
	strip: {
		none: true,
	},
	target: {
		android_arm: {
			srcs: ["proprietary/vendor/lib/libbtnv.so"],
		},
		android_arm64: {
			srcs: ["proprietary/vendor/lib64/libbtnv.so"],
		},
	},
	compile_multilib: "both",
	check_elf_files: false,
	prefer: true,
	soc_specific: true,
}

cc_prebuilt_library_shared {
	name: "libqcci_legacy",
	owner: "lenovo",
	strip: {
		none: true,
	},
	target: {
		android_arm: {
			srcs: ["proprietary/vendor/lib/libqcci_legacy.so"],
		},
		android_arm64: {
			srcs: ["proprietary/vendor/lib64/libqcci_legacy.so"],
		},
	},
	compile_multilib: "both",
	check_elf_files: false,
	prefer: true,
	soc_specific: true,
}

cc_prebuilt_library_shared {
	name: "libqmi",
	owner: "lenovo",
	strip: {
		none: true,
	},
	target: {
		android_arm: {
			srcs: ["proprietary/vendor/lib/libqmi.so"],
		},
		android_arm64: {
			srcs: ["proprietary/vendor/lib64/libqmi.so"],
		},
	},
	compile_multilib: "both",
	check_elf_files: false,
	prefer: true,
	soc_specific: true,
}

cc_prebuilt_library_shared {
	name: "libqmiservices",
	owner: "lenovo",
	strip: {
		none: true,
	},
	target: {
		android_arm: {
			srcs: ["proprietary/vendor/lib/libqmiservices.so"],
		},
		android_arm64: {
			srcs: ["proprietary/vendor/lib64/libqmiservices.so"],
		},
	},
	compile_multilib: "both",
	check_elf_files: false,
	prefer: true,
	soc_specific: true,
}

cc_prebuilt_library_shared {
	name: "libthermalclient",
	owner: "lenovo",
	strip: {
		none: true,
	},
	target: {
		android_arm: {
			srcs: ["proprietary/vendor/lib/libthermalclient.so"],
		},
		android_arm64: {
			srcs: ["proprietary/vendor/lib64/libthermalclient.so"],
		},
	},
	compile_multilib: "both",
	check_elf_files: false,
	prefer: true,
	soc_specific: true,
}

cc_prebuilt_library_shared {
	name: "libtime_genoff",
	owner: "lenovo",
	strip: {
		none: true,
	},
	target: {
		android_arm: {
			srcs: ["proprietary/vendor/lib/libtime_genoff.so"],
		},
		android_arm64: {
			srcs: ["proprietary/vendor/lib64/libtime_genoff.so"],
		},
	},
	compile_multilib: "both",
	check_elf_files: false,
	prefer: true,
	soc_specific: true,
}

cc_prebuilt_library_shared {
	name: "libts_detected_face_hal",
	owner: "lenovo",
	strip: {
		none: true,
	},
	target: {
		android_arm: {
			srcs: ["proprietary/vendor/lib/libts_detected_face_hal.so"],
		},
	},
	compile_multilib: "32",
	check_elf_files: false,
	prefer: true,
	soc_specific: true,
}

cc_prebuilt_library_shared {
	name: "libts_face_beautify_hal",
	owner: "lenovo",
	strip: {
		none: true,
	},
	target: {
		android_arm: {
			srcs: ["proprietary/vendor/lib/libts_face_beautify_hal.so"],
		},
	},
	compile_multilib: "32",
	check_elf_files: false,
	prefer: true,
	soc_specific: true,
}

dex_import {
	name: "QtiTelephonyServicelibrary",
	owner: "lenovo",
	jars: ["proprietary/vendor/framework/QtiTelephonyServicelibrary.jar"],
	soc_specific: true,
}

dex_import {
	name: "qcnvitems",
	owner: "lenovo",
	jars: ["proprietary/vendor/framework/qcnvitems.jar"],
	soc_specific: true,
}

dex_import {
	name: "tcmclient",
	owner: "lenovo",
	jars: ["proprietary/vendor/framework/tcmclient.jar"],
	soc_specific: true,
}

